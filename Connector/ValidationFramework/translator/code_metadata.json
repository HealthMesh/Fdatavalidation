{
  "@context": {
        "@base": "http://www.semanticweb.org/acraf/ontologies/2024/healthmesh/",
        "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
        "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
        "xsd": "http://www.w3.org/2001/XMLSchema#",
        "odrl": "http://www.w3.org/ns/odrl/2/",
        "tb": "http://www.semanticweb.org/acraf/ontologies/2024/healthmesh/tbox#",
        "ab": "http://www.semanticweb.org/acraf/ontologies/2024/healthmesh/abox#"
  },
  "@graph": [
    {
      "@id": "ab:Imp2",
      "@type": "tb:Implementation",
      "tb:hasCode": [
        {
          "@id": "ab:Imp2Code",
          "@type": "tb:Code",
          "tb:code": "data[attr].isna().all()"
        }
      ],
      "tb:hasParameters": [
            {
              "@id": "ab:Imp2CodeParam1",
              "@type": "tb:Parameter",
              "tb:name": "attr",
              "tb:type": "str"
            },
            {
              "@id": "ab:Imp1CodeParam2",
              "@type": "tb:Parameter",
              "tb:name": "data",
              "tb:type": "pandas.DataFrame"
            }
          ],
          "tb:dependsOn": [
            {
              "@id": "ab:Imp1CodeDep1",
              "@type": "tb:Library",
              "tb:name": "pandas",
              "tb:version": "1.0.0"
            }
          ],
          "tb:forOp": [
            {
              "@id": "odrl:anonymize",
              "@type": "tb:Operation"
            }
          ],
          "tb:forType": [
            {
              "@id": "ab:Tabular",
              "@type": "tb:DatasetTypeTemplate"
            }
          ],
          "tb:returns": "boolean"
        }
    ,
    {
      "@id": "ab:Imp6",
      "@type": "tb:Implementation",
      "tb:hasCode": [
        {
          "@id": "ab:Imp6Code",
          "@type": "tb:Code",
          "tb:code": "getattr(data, attr,None) == None"
        }
      ],
      "tb:hasParameters": [
            {
              "@id": "ab:Imp6CodeParam1",
              "@type": "tb:Parameter",
              "tb:name": "attr",
              "tb:type": "str"
            },
            {
              "@id": "ab:Imp6CodeParam2",
              "@type": "tb:Parameter",
              "tb:name": "data",
              "tb:type": "pydicom.dataset.FileDataset"
            }
          ],
          "tb:dependsOn": [
            {
              "@id": "ab:Imp6CodeDep1",
              "@type": "tb:Library",
              "tb:name": "pydicom",
              "tb:version": "1.0.0"
            }
          ],
          "tb:forOp": [
            {
              "@id": "odrl:anonymize",
              "@type": "tb:Operation"
            }
          ],
          "tb:forType": [
            {
              "@id": "ab:Image",
              "@type": "tb:DatasetTypeTemplate"
            }
          ],
          "tb:returns": "boolean"
        }
    ,
    {
      "@id": "ab:Imp1",
      "@type": "tb:Implementation",
      "tb:hasCode": [
        {
          "@id": "ab:Imp1Code",
          "@type": "tb:Code",
          "tb:code": "pandas.read_csv(p)"
        }
      ],
      "tb:hasParameters": [
          {
            "@id": "ab:Imp1CodeParam1",
            "@type": "tb:Parameter",
            "tb:name": "p",
            "tb:type": "str"
          }
      ],
        "tb:dependsOn": [
          {
            "@id": "ab:Imp1CodeDep1",
            "tb:name": "pandas",
            "@type": "tb:Library"
          }
        ],
        "tb:forOp": [
          {
            "@id": "ab:LoadData",
            "@type": "tb:Operation"
          }
        ],
        "tb:forType": [
          {
            "@id": "ab:Tabular",
            "@type": "tb:DatasetTypeTemplate"
          }
        ],
      "tb:returns": "pandas.DataFrame"
    },
    {
      "@id": "ab:Imp9",
      "@type": "tb:Implementation",
      "tb:hasCode": [
        {
          "@id": "ab:Imp9Code",
          "@type": "tb:Code",
          "tb:code": "pydicom.dcmread(p)"
        }
      ],
      "tb:hasParameters": [
          {
            "@id": "ab:Imp9CodeParam1",
            "@type": "tb:Parameter",
            "tb:name": "p",
            "tb:type": "str"
          }
      ],
        "tb:dependsOn": [
          {
            "@id": "ab:Imp9CodeDep1",
            "tb:name": "pydicom",
            "@type": "tb:Library"
          }
        ],
        "tb:forOp": [
          {
            "@id": "ab:LoadData",
            "@type": "tb:Operation"
          }
        ],
        "tb:forType": [
          {
            "@id": "ab:Image",
            "@type": "tb:DatasetTypeTemplate"
          }
        ],
      "tb:returns": "pydicom.dataset.FileDataset"
    },
    {
      "@id": "ab:Imp10",
      "@type": "tb:Implementation",
      "tb:hasCode": [
        {
          "@id": "ab:Imp10Code",
          "@type": "tb:Code",
          "tb:code": "(data[attr].count()/len(data))*100"
        }
      ],
      "tb:hasParameters": [
          {
            "@id": "ab:Imp10CodeParam1",
            "@type": "tb:Parameter",
            "tb:name": "attr",
            "tb:type": "str"
          },
          {
            "@id": "ab:Imp10CodeParam2",
            "@type": "tb:Parameter",
            "tb:name": "data",
            "tb:type": "pandas.DataFrame"
          }
      ],
        "tb:dependsOn": [
          {
            "@id": "ab:Imp10CodeDep1",
            "tb:name": "pandas",
            "@type": "tb:Library"
          }
        ],
        "tb:forOp": [
          {
            "@id": "ab:qM",
            "@type": "tb:Operation"
          }
        ],
        "tb:forType": [
          {
            "@id": "ab:Tabular",
            "@type": "tb:DatasetTypeTemplate"
          }
        ],
        "tb:returns": "integer"
    },
     {
      "@id": "ab:Imp4",
      "@type": "tb:Implementation",
      "tb:hasCode": [
        {
          "@id": "ab:Imp4Code",
          "@type": "tb:Code",
          "tb:code": "data >= ro"
        }
      ],
      "tb:hasParameters": [
          {
            "@id": "ab:Imp4CodeParam1",
            "@type": "tb:Parameter",
            "tb:name": "lo",
            "tb:type": "str"
          },
          {
            "@id": "ab:Imp4CodeParam2",
            "@type": "tb:Parameter",
            "tb:name": "ro",
            "tb:type": "int"
          },
          {
            "@id": "ab:Imp4CodeParam3",
            "@type": "tb:Parameter",
            "tb:name": "data",
            "tb:type": "pandas.DataFrame"
          }
          ],
      "tb:dependsOn": [
            {
                "@id": "ab:Imp4CodeDep1",
                "tb:name": "pandas",
                "@type": "tb:Library"
            }
        ],
        "tb:forOp": [
          {
            "@id": "odrl:Constraint",
            "@type": "tb:Operation"
          }
        ],
        "tb:forType": [
          {
            "@id": "ab:Tabular",
            "@type": "tb:DatasetTypeTemplate"
          },{
            "@id": "ab:ML",
            "@type": "tb:DatasetTypeTemplate"
          }
        ]
     },
       {
      "@id": "ab:Imp11",
      "@type": "tb:Implementation",
      "tb:hasCode": [
        {
          "@id": "ab:Imp10Code",
          "@type": "tb:Code",
          "tb:code": "(data[attr].count()/len(data))*100"
        }
      ],
      "tb:hasParameters": [
          {
            "@id": "ab:Imp10CodeParam1",
            "@type": "tb:Parameter",
            "tb:name": "attr",
            "tb:type": "str"
          },
          {
            "@id": "ab:Imp10CodeParam2",
            "@type": "tb:Parameter",
            "tb:name": "data",
            "tb:type": "pandas.DataFrame"
          }
      ],
        "tb:dependsOn": [
          {
            "@id": "ab:Imp10CodeDep1",
            "tb:name": "pandas",
            "@type": "tb:Library"
          }
        ],
        "tb:forOp": [
          {
            "@id": "ab:FairnessDegree",
            "@type": "tb:Operation"
          }
        ],
        "tb:forType": [
          {
            "@id": "ab:Tabular",
            "@type": "tb:DatasetTypeTemplate"
          }
        ],
        "tb:returns": "integer"
    },
       {
      "@id": "ab:Imp20",
      "@type": "tb:Implementation",
      "tb:hasCode": [
        {
          "@id": "ab:Imp10Code",
          "@type": "tb:Code",
          "tb:code": "(data[attr].count()/len(data))*100"
        }
      ],
      "tb:hasParameters": [
          {
            "@id": "ab:Imp10CodeParam1",
            "@type": "tb:Parameter",
            "tb:name": "attr",
            "tb:type": "str"
          },
          {
            "@id": "ab:Imp10CodeParam2",
            "@type": "tb:Parameter",
            "tb:name": "data",
            "tb:type": "pandas.DataFrame"
          }
      ],
        "tb:dependsOn": [
          {
            "@id": "ab:Imp10CodeDep1",
            "tb:name": "pandas",
            "@type": "tb:Library"
          }
        ],
        "tb:forOp": [
          {
            "@id": "ab:FairnessDegree",
            "@type": "tb:Operation"
          }
        ],
        "tb:forType": [
          {
            "@id": "ab:Tabular",
            "@type": "tb:DatasetTypeTemplate"
          }
        ],
        "tb:returns": "integer"
    }, {
      "@id": "ab:Imp234",
      "@type": "tb:Implementation",
      "tb:hasCode": [
        {
          "@id": "ab:Imp4Code",
          "@type": "tb:Code",
          "tb:code": "data if not (data[attr] >= ro).all() else (data[attr] >= ro).all()"
        }
      ],
      "tb:hasParameters": [
        {
            "@id": "ab:Imp423CodeParam1",
            "@type": "tb:Parameter",
            "tb:name": "data",
            "tb:type": "pandas.DataFrame"
          },
          {
            "@id": "ab:Imp343CodeParam2",
            "@type": "tb:Parameter",
            "tb:name": "attr",
            "tb:type": "str"
          },
          {
            "@id": "ab:Imp4433CodeParam3",
            "@type": "tb:Parameter",
            "tb:name": "ro",
            "tb:type": "int"
          }
          ],
      "tb:dependsOn": [
            {
                "@id": "ab:Imp4CodeDep1",
                "tb:name": "pandas",
                "@type": "tb:Library"
            }
        ],
        "tb:forOp": [
          {
            "@id": "odrl:LConstraint",
            "@type": "tb:Operation"
          }
        ],
        "tb:forType": [
          {
            "@id": "ab:Tabular",
            "@type": "tb:DatasetTypeTemplate"
          }
        ]
     },
    {
      "@id": "ab:Imp1111",
      "@type": "tb:Implementation",
      "tb:hasCode": [
        {
          "@id": "ab:Imp23111Code",
          "@type": "tb:Code",
          "tb:code": "pycaret.classification.load_model(p.split('.')[0])"
        }
      ],
      "tb:hasParameters": [
          {
            "@id": "ab:Imp11111CodeParam1",
            "@type": "tb:Parameter",
            "tb:name": "p",
            "tb:type": "str"
          }
      ],
        "tb:dependsOn": [
          {
            "@id": "ab:Imp11111CodeDep1",
            "tb:name": "pycaret.classification",
            "@type": "tb:Library"
          }
        ],
        "tb:forOp": [
          {
            "@id": "ab:LoadData",
            "@type": "tb:Operation"
          }
        ],
        "tb:forType": [
          {
            "@id": "ab:ML",
            "@type": "tb:DatasetTypeTemplate"
          }
        ],
      "tb:returns": "pandas.DataFrame"
    },
    {
      "@id": "ab:Imp20000",
      "@type": "tb:Implementation",
      "tb:hasCode": [
        {
          "@id": "ab:ImpImp20000Code",
          "@type": "tb:Code",
          "tb:code": "pycaret.classification.predict_model(data, data=pandas.read_csv(attr))\nfairlearn.metrics.demographic_parity_difference(data['target'],data['prediction_label'],sensitive_features=data['Gender'])"
        }
      ],
      "tb:hasParameters": [
          {
            "@id": "ab:Imp12000CodeParam1",
            "@type": "tb:Parameter",
            "tb:name": "attr",
            "tb:type": "str"
          },
          {
            "@id": "ab:Imp12220CodeParam2",
            "@type": "tb:Parameter",
            "tb:name": "data",
            "tb:type": "pandas.DataFrame"
          }
      ],
        "tb:dependsOn": [
          {
            "@id": "ab:Imp12220CodeDep1",
            "tb:name": "pycaret",
            "@type": "tb:Library"
          },{
            "@id": "ab:Imp12220CodeDep23",
            "tb:name": "fairlearn.metrics",
            "@type": "tb:Library"
          },
          {
            "@id": "ab:Imp12220CodeDep233",
            "tb:name": "pandas",
            "@type": "tb:Library"
          }
        ],
        "tb:forOp": [
          {
            "@id": "ab:DemographicParity",
            "@type": "tb:Operation"
          }
        ],
        "tb:forType": [
          {
            "@id": "ab:ML",
            "@type": "tb:DatasetTypeTemplate"
          }
        ],
        "tb:returns": "integer"
    },
      {
      "@id": "ab:Imp30000",
      "@type": "tb:Implementation",
      "tb:hasCode": [
        {
          "@id": "ab:ImpImp2330000Code",
          "@type": "tb:Code",
          "tb:code": "(lambda splits: 1 - RandomForestClassifier(n_estimators=10).fit(splits[0], splits[2]).score(splits[1], splits[3]))(train_test_split(pandas.get_dummies(data.drop(columns=attr).fillna(0)), data[attr] > data[attr].median())) * 100"
        }
      ],
      "tb:hasParameters": [
          {
            "@id": "ab:Imp123000CodeParam1",
            "@type": "tb:Parameter",
            "tb:name": "attr",
            "tb:type": "str"
          },
          {
            "@id": "ab:Imp123220CodeParam2",
            "@type": "tb:Parameter",
            "tb:name": "data",
            "tb:type": "pandas.DataFrame"
          }
      ],
        "tb:dependsOn": [
          {
            "@id": "ab:Imp1323220CodeDep1",
            "tb:name": "sklearn",
            "@type": "tb:Library"
          },
          {
            "@id": "ab:Imp122240CodeDep233",
            "tb:name": "pandas",
            "@type": "tb:Library"
          }
        ],
        "tb:forOp": [
          {
            "@id": "ab:MembershipInferenceAccuracy",
            "@type": "tb:Operation"
          }
        ],
        "tb:forType": [
          {
            "@id": "ab:Tabular",
            "@type": "tb:DatasetTypeTemplate"
          }
        ],
        "tb:returns": "integer"
    }
  ]
}